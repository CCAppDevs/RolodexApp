// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RolodexApp.Data;

#nullable disable

namespace RolodexApp.Migrations
{
    [DbContext(typeof(RolodexContext))]
    [Migration("20241120192208_AddedSeedContact")]
    partial class AddedSeedContact
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RolodexApp.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<DateTime>("ContactedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LengthOfCall")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Response")
                        .HasColumnType("int");

                    b.HasKey("ContactId");

                    b.HasIndex("PersonId");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            ContactedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LengthOfCall = 120,
                            PersonId = 1,
                            Reason = "Talked about stuff",
                            Response = 0
                        });
                });

            modelBuilder.Entity("RolodexApp.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Email = "jesse@jesse.com",
                            FirstName = "Jesse",
                            LastName = "Harlan",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            PersonId = 2,
                            Address1 = "123 Someplace Ln",
                            City = "No Place",
                            FirstName = "Tom",
                            LastName = "Jones",
                            PhoneNumber = "1234567891",
                            PostalCode = "12345",
                            State = "NY"
                        },
                        new
                        {
                            PersonId = 3,
                            Address1 = "123 Someplace Ln",
                            City = "No Place",
                            FirstName = "Sue",
                            LastName = "Jones",
                            PhoneNumber = "1234567892",
                            PostalCode = "12345",
                            State = "NY"
                        });
                });

            modelBuilder.Entity("RolodexApp.Models.Contact", b =>
                {
                    b.HasOne("RolodexApp.Models.Person", null)
                        .WithMany("Contacts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolodexApp.Models.Person", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
